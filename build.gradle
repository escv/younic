// Available to customize the build

plugins {
	id 'java'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
  jarFile = rootProject.file('.gradle-wrapper/gradle-wrapper.jar')
}

task dist() {
	def aggSourceDirs = [] as LinkedList
	bndWorkspace.models.each{
		def fromFile = new File(it.value.base, "generated/")
		copy {
            from fromFile
            into 'cnf/run/bundle/'
            include '**/*.jar'
        }
	}
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'

    //dependsOn(publishedProjects.test)
    def aggProjects = [] as LinkedList
    def aggSourceDirs = [] as LinkedList
    def aggOutDirs = [] as LinkedList
    def aggExecData = [] as LinkedList
	bndWorkspace.models.each{
		aggSourceDirs.addAll(it.value.allsourcepath)
		aggOutDirs.add(it.value.output)
		aggProjects.add(it.value)
		def testReport = new File(it.value.base, "generated/test-reports/test/binary/output.bin")
		if (testReport.exists()) {
			aggExecData.add(testReport)
		}
		
	}

    additionalSourceDirs = files(aggSourceDirs)
    sourceDirectories = files(aggSourceDirs)
    classDirectories = files(aggOutDirs)
    executionData = files(aggProjects.jacocoTestReport.executionData)

    reports {
        //html.enabled = true // human readable
        xml.enabled = true // required by coveralls
        //xml.destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    } 
}
coveralls {
	def aggSourceDirs = [] as LinkedList
	bndWorkspace.models.each{
		aggSourceDirs.addAll(it.value.allsourcepath)
	}
    sourceDirs = aggSourceDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}
tasks.coveralls {
    dependsOn jacocoRootReport
}

